---
import type { CollectionEntry } from "astro:content";
import { SITE_URL, AUTHOR_NAME, AUTHOR_URL } from "../consts";

interface Props {
  article: CollectionEntry<"blog">;
  url: string;
}

const { article, url } = Astro.props;

const publicationDate = article.data.pubDate ?? new Date();
const isoDate = publicationDate.toISOString();

const jsonLd = {
  "@context": "https://schema.org",
  "@type": "BlogPosting",
  headline: article.data.title,
  description: article.data.description,
  datePublished: isoDate,
  dateModified: isoDate,
  author: {
    "@type": "Person",
    name: AUTHOR_NAME,
    url: AUTHOR_URL,
  },
  publisher: {
    "@type": "Person",
    name: AUTHOR_NAME,
    url: SITE_URL,
  },
  url: url,
  mainEntityOfPage: {
    "@type": "WebPage",
    "@id": url,
  },
  keywords: article.data.keywords,
  inLanguage: "fr-FR",
};

// Add canonical URL if present (for cross-posted articles)
if (article.data.canonical) {
  jsonLd["isBasedOn"] = article.data.canonical;
}
---

<script type="application/ld+json" set:html={JSON.stringify(jsonLd)} />
